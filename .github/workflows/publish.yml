name: Publish NuGet Package

on:
  push:
    branches:
      - master  # Runs on every push to master

jobs:
  publish:
    runs-on: windows-latest  # Use a Windows runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'  # Adjust to your target .NET version

      - name: Add GitHub Package Registry source
        run: |
          dotnet nuget add source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" `
            --name github `
            --username ${{ github.actor }} `
            --password ${{ secrets.GITHUB_TOKEN }} `
            --store-password-in-clear-text
        shell: pwsh

      - name: Build PeridotContentExtensions (First)
        run: dotnet build PeridotContentExtensions/PeridotContentExtensions.csproj --configuration Release
        shell: pwsh

      - name: Copy Content Extensions DLL
        run: |
          mkdir -Force "D:\a\PeridotEngine\PeridotEngine\PeridotContentExtensions\bin\Debug\net6.0"
          Copy-Item "D:\a\PeridotEngine\PeridotEngine\PeridotContentExtensions\bin\Release\net6.0\PeridotContentExtensions.dll" `
          "D:\a\PeridotEngine\PeridotEngine\PeridotContentExtensions\bin\Debug\net6.0\PeridotContentExtensions.dll"
        shell: pwsh
        
      - name: Build and Pack NuGet Package
        run: dotnet pack --configuration Release --output nupkg
        shell: pwsh

      - name: Push Package to GitHub Registry
        run: dotnet nuget push "nupkg/*.nupkg" --source github --api-key ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
