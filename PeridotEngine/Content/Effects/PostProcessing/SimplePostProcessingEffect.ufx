#if OPENGL
	#define SV_POSITION POSITION
	#define VS_SHADERMODEL vs_3_0
	#define PS_SHADERMODEL ps_3_0
#else
	#define VS_SHADERMODEL vs_4_0
	#define PS_SHADERMODEL ps_4_0
#endif

#include "../Macros.fxh"

float4 FogColor;
float FogStart;
float FogEnd;

float NearPlane;
float FarPlane;

matrix Projection;
matrix InverseProjection;

DECLARE_TEXTURE(ColorTexture, 0);
DECLARE_TEXTURE(DepthTexture, 1);
DECLARE_TEXTURE(AmbientOcclusionTexture, 2);

struct VertexShaderInput
{
	float4 Position : POSITION0;
	float2 TexCoord : TEXCOORD0;
};

struct VertexShaderOutput
{
	float4 Position : SV_POSITION;
	float2 TexCoord : TEXCOORD0;
};

float4 uvToProjPos(float2 uv)
{
	float depth = SAMPLE_TEXTURE(DepthTexture, saturate(uv)).r;
	float4 pos = float4(
		map(uv.x, 0, 1, -1, 1),
		map(uv.y, 0, 1, -1, 1),
		depth,
		1
	);
	return pos;
}

float2 projPosToUv(float3 projPos) {
	return float2(
		map(projPos.x, -1, 1, 0, 1),
		map(projPos.y, -1, 1, 0, 1)
	);	
}

float gauss(float x, float sigma) {
	return (1.0f / (sqrt(2 * PI) * sigma)) * pow(EULER, -pow(x, 2) / (2 * pow(sigma, 2)));
}

float4 applyFog(VertexShaderOutput input, float4 color) {
	float4 pos = uvToProjPos(input.TexCoord);
	pos = mul(pos, InverseProjection);
	pos /= pos.w;

    float fogBlend = clamp(map(length(pos), FogStart, FogEnd, 0, 1), 0, 1);

    color = lerp(color, FogColor, fogBlend);

	return color;
}

VertexShaderOutput VS(in VertexShaderInput input)
{
	VertexShaderOutput output = (VertexShaderOutput)0;

	output.Position = input.Position;
	output.TexCoord = input.TexCoord;

	return output;
}

$uberblock SimplePostProcessingEffect(bool fogEnabled, bool ssaoEnabled)
float4 PixelShader$$(VertexShaderOutput input) : COLOR {
	float4 color = SAMPLE_TEXTURE(ColorTexture, input.TexCoord);

	$if(fogEnabled)
		color = applyFog(input, color);
	$endif

	$if(ssaoEnabled)
		color *= SAMPLE_TEXTURE(AmbientOcclusionTexture, input.TexCoord).r;
	$endif

	return color;
}
$endblock

$ubercombinations SimplePostProcessingEffect (bool fogEnabled, bool ssaoEnabled) technique VS SimplePostProcessingEffect(fogEnabled, ssaoEnabled)