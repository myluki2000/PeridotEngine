<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

using PeridotEngine.ECS.Components;

namespace PeridotWindows.ECS
{
	public partial class Query {
		<# for(int i = 1; i <= 10; i++) { 
			string genericTypes = string.Join(", ", Enumerable.Range(1, i).Select(x => "T" + x));
			string genericConstraints = string.Join(" ", Enumerable.Range(1, i).Select(x => "where T" + x + " : ComponentBase"));
			string componentIndices = string.Join("\n", Enumerable.Range(1, i)
					.Select(x => "int c" + x + "Index = Array.IndexOf(archetype.ComponentTypes, typeof(T" + x + "));"));
			string args = string.Join(", ", Enumerable.Range(1, i).Select(x => "(T" + x + ")archetype.Components[c" + x +"Index][i]"));
		#>
		public void ForEach<<#= genericTypes #>>(Action<<#= genericTypes #>> action) <#= genericConstraints #> {
			if (archetypesOutdated) UpdateMatchingArchetypes();

			foreach (Archetype archetype in matchingArchetypes)
			{
				<#= componentIndices #>

				for (int i = 0; i < archetype.EntityCount; i++)
				{
					action.Invoke(<#= args #>);
				}
			}
		}

		public void First<<#= genericTypes #>>(Action<<#= genericTypes #>> action) <#= genericConstraints #> {
			if (archetypesOutdated) UpdateMatchingArchetypes();

			foreach (Archetype archetype in matchingArchetypes)
			{
				<#= componentIndices #>

				for (int i = 0; i < archetype.EntityCount; i++)
				{
					action.Invoke(<#= args #>);
					return;
				}
			}
			
		}

		<# } #>
	}
}